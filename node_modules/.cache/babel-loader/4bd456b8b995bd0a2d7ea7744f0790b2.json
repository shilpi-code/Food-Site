{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ARCHIT\\\\Desktop\\\\food-project\\\\01-starting-project\\\\src\\\\Components\\\\Cart\\\\Cart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useContext } from 'react';\nimport classes from './Cart.module.css';\nimport Modal from '../UI/Modal';\nimport CartContext from '../../store/cart-context';\nimport CartItem from '../Cart/CartItem';\nimport Checkout from './Checkout';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cart = props => {\n  _s();\n\n  const [isCheckout, setIsCheckout] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [didSubmit, setDidsubmit] = useState(false);\n  const cartCtx = useContext(CartContext);\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\n  const hasItems = cartCtx.items.length > 0; // with hasItems, checking no of items, if greater than 0 then only hv order btn\n\n  const orderHandler = event => {\n    event.preventDefault();\n    setIsCheckout(true);\n  };\n\n  const cartItemRemoveHandler = id => {\n    cartCtx.removeItem(id);\n  };\n\n  const cartItemAddHandler = item => {\n    cartCtx.addItem({ ...item,\n      amount: 1\n    });\n  };\n\n  const modalActions = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.actions,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes['button--alt'],\n      onClick: props.onClose,\n      children: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this), hasItems && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes.button,\n      onClick: orderHandler,\n      children: \"Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n\n  const submitOrderHandler = async userData => {\n    setIsSubmitting(true);\n    await fetch('https://react-food-6160e-default-rtdb.asia-southeast1.firebasedatabase.app/orders.json', {\n      method: 'POST',\n      body: JSON.stringify({\n        user: userData,\n        orderedItems: cartCtx.items\n      })\n    });\n    setIsSubmitting(false);\n    setDidsubmit(true);\n  };\n\n  const cartItems = /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: classes['cart-items'],\n    children: cartCtx.items.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n      name: item.name,\n      amount: item.amount,\n      price: item.price,\n      onRemove: cartItemRemoveHandler.bind(null, item.id),\n      onAdd: cartItemAddHandler.bind(null, item)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n\n  const cartModalContent = /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [cartItems, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.total,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Total Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: totalAmount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), isCheckout && /*#__PURE__*/_jsxDEV(Checkout, {\n      onConfirm: submitOrderHandler,\n      onCancel: props.onClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 22\n    }, this), !isCheckout && modalActions]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n\n  const didsubmitModalContent = /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Successfully sent the order!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.button,\n        onClick: props.onClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n\n  const SubmittingModalContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Sending the order details..\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: props.onClose,\n    children: [!isSubmitting && !didSubmit && cartModalContent, isSubmitting && !didSubmit && SubmittingModalContent, !isSubmitting && didSubmit && didSubmitModalContent]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Cart, \"EsGNb3NMlf8URV4xvFRqkQqJ0l4=\");\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["C:/Users/ARCHIT/Desktop/food-project/01-starting-project/src/Components/Cart/Cart.js"],"names":["React","useState","useContext","classes","Modal","CartContext","CartItem","Checkout","Cart","props","isCheckout","setIsCheckout","isSubmitting","setIsSubmitting","didSubmit","setDidsubmit","cartCtx","totalAmount","toFixed","hasItems","items","length","orderHandler","event","preventDefault","cartItemRemoveHandler","id","removeItem","cartItemAddHandler","item","addItem","amount","modalActions","actions","onClose","button","submitOrderHandler","userData","fetch","method","body","JSON","stringify","user","orderedItems","cartItems","map","name","price","bind","cartModalContent","total","didsubmitModalContent","SubmittingModalContent","didSubmitModalContent"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { useContext } from 'react';\r\nimport classes from './Cart.module.css';\r\nimport Modal from '../UI/Modal';\r\nimport CartContext from '../../store/cart-context';\r\nimport CartItem from '../Cart/CartItem';\r\nimport Checkout from './Checkout';\r\n\r\nconst Cart = (props) => {\r\n  const [isCheckout, setIsCheckout]= useState(false);\r\n  const [isSubmitting, setIsSubmitting]= useState(false);\r\n  const [didSubmit, setDidsubmit]=useState(false);\r\n  const cartCtx = useContext(CartContext);\r\n\r\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\r\n  const hasItems = cartCtx.items.length > 0;\r\n  // with hasItems, checking no of items, if greater than 0 then only hv order btn\r\n\r\n  const orderHandler=(event)=>{\r\n    event.preventDefault();\r\n    setIsCheckout(true);\r\n  }\r\n\r\n  const cartItemRemoveHandler = (id) => {\r\n    cartCtx.removeItem(id);\r\n  };\r\n\r\n  const cartItemAddHandler = (item) => {\r\n    cartCtx.addItem({...item, amount: 1});\r\n  };\r\n  const modalActions=(\r\n    <div className={classes.actions}>\r\n    <button className={classes['button--alt']} onClick={props.onClose}>Close</button>\r\n    {hasItems && <button className={classes.button} onClick={orderHandler}>Order</button>}\r\n  </div>\r\n  );\r\n\r\n  const submitOrderHandler=async(userData)=>{\r\n    setIsSubmitting(true);\r\n    await fetch('https://react-food-6160e-default-rtdb.asia-southeast1.firebasedatabase.app/orders.json',{\r\n      method:'POST',\r\n      body: JSON.stringify({\r\n        user: userData,\r\n        orderedItems: cartCtx.items\r\n    })\r\n  });\r\n  setIsSubmitting(false);\r\n  setDidsubmit(true);\r\n  };\r\n\r\n  const cartItems = (\r\n    <ul className={classes['cart-items']}>\r\n      {cartCtx.items.map((item) => (\r\n        <CartItem\r\n          key={item.id}\r\n          name={item.name}\r\n          amount={item.amount}\r\n          price={item.price}\r\n          onRemove={cartItemRemoveHandler.bind(null, item.id)}\r\n          onAdd={cartItemAddHandler.bind(null, item)}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n\r\n  const cartModalContent=(\r\n    <React.Fragment>\r\n      {cartItems}\r\n      <div className={classes.total}>\r\n        <span>Total Amount</span>\r\n        <span>{totalAmount}</span>\r\n      </div>\r\n      {isCheckout && <Checkout onConfirm={submitOrderHandler} onCancel={props.onClose} />}\r\n      {!isCheckout && modalActions}\r\n    </React.Fragment>\r\n  );\r\n  const didsubmitModalContent=(\r\n    <React.Fragment>\r\n      <p>Successfully sent the order!</p>\r\n      <div className={classes.actions}>\r\n      <button className={classes.button} onClick={props.onClose}>\r\n        Close\r\n      </button>\r\n    </div>\r\n    </React.Fragment>\r\n  );\r\n\r\n  const SubmittingModalContent=(\r\n    <p>Sending the order details..</p>\r\n  )\r\n\r\n  return (\r\n    <Modal onClose={props.onClose}>\r\n     {!isSubmitting && !didSubmit && cartModalContent}\r\n     {isSubmitting && !didSubmit && SubmittingModalContent}\r\n     {!isSubmitting && didSubmit && didSubmitModalContent}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default Cart;"]},"metadata":{},"sourceType":"module"}